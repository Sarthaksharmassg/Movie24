// Generated by Dagger (https://dagger.dev).
package com.example.movies24.movieList.presentation;

import com.example.movies24.movieList.data.remote.MovieApi;
import com.example.movies24.movieList.domain.repository.MovieListRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class MovieListViewModel_Factory implements Factory<MovieListViewModel> {
  private final Provider<MovieListRepository> movieListRepositoryProvider;

  private final Provider<MovieApi> movieApiProvider;

  public MovieListViewModel_Factory(Provider<MovieListRepository> movieListRepositoryProvider,
      Provider<MovieApi> movieApiProvider) {
    this.movieListRepositoryProvider = movieListRepositoryProvider;
    this.movieApiProvider = movieApiProvider;
  }

  @Override
  public MovieListViewModel get() {
    return newInstance(movieListRepositoryProvider.get(), movieApiProvider.get());
  }

  public static MovieListViewModel_Factory create(
      Provider<MovieListRepository> movieListRepositoryProvider,
      Provider<MovieApi> movieApiProvider) {
    return new MovieListViewModel_Factory(movieListRepositoryProvider, movieApiProvider);
  }

  public static MovieListViewModel newInstance(MovieListRepository movieListRepository,
      MovieApi movieApi) {
    return new MovieListViewModel(movieListRepository, movieApi);
  }
}
